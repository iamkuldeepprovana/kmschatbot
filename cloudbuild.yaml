steps:
  # Step 1: Print build information
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Build triggered for kmschatbot"
        echo "Commit SHA: $COMMIT_SHA"
        echo "Branch: $BRANCH_NAME"

  # Step 2: Pull previous image for layer caching
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull $_IMAGE_NAME:latest || true

  # Step 3: Build the Docker image with cache
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_IMAGE_NAME}:${COMMIT_SHA}'
      - '-t'
      - '${_IMAGE_NAME}:latest'
      - '--cache-from'
      - '${_IMAGE_NAME}:latest'
      - '.'

  # Step 4: Push both tagged images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}:${COMMIT_SHA}']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}:latest']

  # Step 5: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy kmschatbot \
          --image '${_IMAGE_NAME}:${COMMIT_SHA}' \
          --platform managed \
          --region us-central1 \
          --port 3000 \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 1 \
          --max-instances 10 \
          --allow-unauthenticated \
          --set-env-vars=MONGODB_URI=mongodb+srv://admin:admin@cluster0.9jco5cr.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1800s'

substitutions:
  _IMAGE_NAME: gcr.io/gen-lang-client-0443511296/kmschatbot